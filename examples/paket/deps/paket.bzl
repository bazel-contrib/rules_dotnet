"Generated by paket2bazel"

load("@rules_dotnet//dotnet:defs.bzl", "nuget_package")

def paket():
    "paket"
    nuget_package(
        name = "main.argu",
        package = "Argu",
        version = "6.1.1",
        sha256 = "b40f67149996be848ea3ca0557ac14b9ab46e7b6b74125b48f100373c03329ed",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.0/Argu.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.fsharp.core//:lib",
        "@main.system.configuration.configurationmanager//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.fsharp.core",
        package = "FSharp.Core",
        version = "6.0.3",
        sha256 = "a9701c0a654ccee9fb4691a3672364b7a700d3ee919542ae2595da1f81e34a64",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.1/FSharp.Core.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.fsharp.data",
        package = "FSharp.Data",
        version = "4.2.8",
        sha256 = "e47bf7330a3c6e1d78bcb3adfcefd7a9820e6d215187fd5437a995685f08fbb3",
        build_file = "@examples//paket/deps/custom_build_files:FSharp.Data.BUILD",
    )
    nuget_package(
        name = "main.grpc",
        package = "Grpc",
        version = "2.46.1",
        sha256 = "37116ca9c1a2253a776f4ea20a8df11687e99bdd7c3f79188fde81530d6ce129",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.grpc.core//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.grpc.core",
        package = "Grpc.Core",
        version = "2.46.1",
        sha256 = "bc6f17b6975b888f7ea8430f324264afe3be6adbbe8034a27d64d4c2fd2fd1c2",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.0/Grpc.Core.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.grpc.core.api//:lib",
        "@main.system.memory//:lib",
    ],
    data = select({
        ":linux-x64": [
            "runtimes/linux-x64/native/libgrpc_csharp_ext.x64.so",
            "runtimes/linux-x64/native/libgrpc_csharp_ext.x64.so",
        ],
        ":osx-arm64": [
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
        ],
        ":osx-x64": [
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
        ],
        ":win-x64": [
            "runtimes/win-x64/native/grpc_csharp_ext.x64.dll",
            "runtimes/win-x64/native/grpc_csharp_ext.x64.dll",
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
            "runtimes/linux-x64/native/libgrpc_csharp_ext.x64.so",
            "runtimes/linux-x64/native/libgrpc_csharp_ext.x64.so",
        ],
        ":osx-arm64": [
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
        ],
        ":osx-x64": [
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
            "runtimes/osx-x64/native/libgrpc_csharp_ext.x64.dylib",
        ],
        ":win-x64": [
            "runtimes/win-x64/native/grpc_csharp_ext.x64.dll",
            "runtimes/win-x64/native/grpc_csharp_ext.x64.dll",
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.grpc.core.api",
        package = "Grpc.Core.Api",
        version = "2.46.1",
        sha256 = "d5df912e3342bdddd9600289e07aea695cc2ca956444e535fd851078d8563464",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.1/Grpc.Core.Api.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.memory//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.microsoft.csharp",
        package = "Microsoft.CSharp",
        version = "4.7.0",
        sha256 = "127927bf646c145ebc9443ddadfe4cf81a55d641e82d3551029294c2e93fa63d",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/Microsoft.CSharp.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.netstandard.library//:lib",
        "@main.system.dynamic.runtime//:lib",
        "@main.system.reflection.typeextensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.microsoft.netcore.platforms",
        package = "Microsoft.NETCore.Platforms",
        version = "6.0.3",
        sha256 = "07cb50afab4638e9f3c216691893a6f64fccd26fc74fda5f26a00568dd5015e3",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.microsoft.netcore.targets",
        package = "Microsoft.NETCore.Targets",
        version = "5.0.0",
        sha256 = "e6b14127c164c3bfb5d62086f6731584ea8f0a9c9522b6d4ceb15085cff6787c",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.microsoft.win32.primitives",
        package = "Microsoft.Win32.Primitives",
        version = "4.3.0",
        sha256 = "98134398f5cd4d6e785cb9cf014c0146f90839114ceff8f40f42364b240f0c48",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/Microsoft.Win32.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/Microsoft.Win32.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.microsoft.win32.systemevents",
        package = "Microsoft.Win32.SystemEvents",
        version = "6.0.1",
        sha256 = "c24f2857b8c765f4b1297e4f0dc5774bfa529ec685ab89abf1f6a4bc923857d5",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/Microsoft.Win32.SystemEvents.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.netstandard.library",
        package = "NETStandard.Library",
        version = "2.0.3",
        sha256 = "3eb87644f79bcffb3c0331dbdac3c7837265f2cdf58a7bfd93e431776f77c9ba",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.system.runtime.interopservices.runtimeinformation//:lib",
        "@main.microsoft.win32.primitives//:lib",
        "@main.system.appcontext//:lib",
        "@main.system.console//:lib",
        "@main.system.globalization.calendars//:lib",
        "@main.system.io.compression//:lib",
        "@main.system.io.compression.zipfile//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.io.filesystem.primitives//:lib",
        "@main.system.net.http//:lib",
        "@main.system.net.sockets//:lib",
        "@main.system.security.cryptography.algorithms//:lib",
        "@main.system.security.cryptography.encoding//:lib",
        "@main.system.security.cryptography.primitives//:lib",
        "@main.system.security.cryptography.x509certificates//:lib",
        "@main.system.xml.readerwriter//:lib",
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.tools//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.linq//:lib",
        "@main.system.linq.expressions//:lib",
        "@main.system.net.primitives//:lib",
        "@main.system.objectmodel//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.extensions//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.text.encoding.extensions//:lib",
        "@main.system.text.regularexpressions//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.system.xml.xdocument//:lib",
        "@main.system.collections.concurrent//:lib",
        "@main.system.diagnostics.tracing//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.runtime.numerics//:lib",
        "@main.system.threading.timer//:lib",
        "@main.system.runtime.handles//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.newtonsoft.json",
        package = "Newtonsoft.Json",
        version = "13.0.1",
        sha256 = "2b6b52556e27e1b7913f33eedeb95568110c746bd64afff74357f1683878323a",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.0/Newtonsoft.Json.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
        "lib/netstandard1.3/Newtonsoft.Json.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.csharp//:lib",
        "@main.netstandard.library//:lib",
        "@main.system.componentmodel.typeconverter//:lib",
        "@main.system.runtime.serialization.primitives//:lib",
        "@main.system.runtime.serialization.formatters//:lib",
        "@main.system.xml.xmldocument//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.appcontext",
        package = "System.AppContext",
        version = "4.3.0",
        sha256 = "ca0f792cd40ec05940d6d5b15dd42457226a4f8027a0373e0029ab36fcc68998",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.6/System.AppContext.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.AppContext.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.buffers",
        package = "System.Buffers",
        version = "4.5.1",
        sha256 = "c30b3dd2c7e2f4cee4b823d692fd42118309b42ab1f5007f923d329a5b0d6b12",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.1/System.Buffers.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.tracing//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.collections",
        package = "System.Collections",
        version = "4.3.0",
        sha256 = "69f63b554b43eb0ff9998aab71ef2442bbc321f4b61970c834387bdc88f124a7",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Collections.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Collections.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.collections.concurrent",
        package = "System.Collections.Concurrent",
        version = "4.3.0",
        sha256 = "28c6390df2670de22c6b5dc3a6abf237c36445e644300167966360955a052172",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Collections.Concurrent.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.tracing//:lib",
        "@main.system.globalization//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.system.reflection//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Collections.Concurrent.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.tracing//:lib",
        "@main.system.globalization//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.system.reflection//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.componentmodel",
        package = "System.ComponentModel",
        version = "4.3.0",
        sha256 = "8b4d2eba330ee091032043ca2e674b637409eaf752a70e8687da0ece41580625",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.ComponentModel.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.ComponentModel.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.componentmodel.primitives",
        package = "System.ComponentModel.Primitives",
        version = "4.3.0",
        sha256 = "20e30995eb88069a663f8102077b9fb5b75c80bec209de7afa8003fd2aab6eeb",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.ComponentModel.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.componentmodel//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.ComponentModel.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.componentmodel//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.componentmodel.typeconverter",
        package = "System.ComponentModel.TypeConverter",
        version = "4.3.0",
        sha256 = "3d20e23d8b7c3e04dd4d4073f861fa94709a3356207ce6e77879d9b1cf05cf9e",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.5/System.ComponentModel.TypeConverter.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.componentmodel.primitives//:lib",
        "@main.system.collections.nongeneric//:lib",
        "@main.system.collections//:lib",
        "@main.system.componentmodel//:lib",
        "@main.system.globalization//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.extensions//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
        "@main.system.collections.specialized//:lib",
        "@main.system.linq//:lib",
        "@main.system.reflection.typeextensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.ComponentModel.TypeConverter.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.componentmodel.primitives//:lib",
        "@main.system.collections//:lib",
        "@main.system.componentmodel//:lib",
        "@main.system.globalization//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.extensions//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.configuration.configurationmanager",
        package = "System.Configuration.ConfigurationManager",
        version = "6.0.0",
        sha256 = "7cf57aebc09f8bef29356aef1806ab1787dec1d3d5103c25256bc9934cbe0a6b",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Configuration.ConfigurationManager.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.permissions//:lib",
        "@main.system.security.cryptography.protecteddata//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.console",
        package = "System.Console",
        version = "4.3.1",
        sha256 = "eaf823481a74ac1a69e6a7290961cd552509073462827d61f1c764e10ef994dc",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Console.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.runtime//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Console.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.runtime//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.diagnostics.debug",
        package = "System.Diagnostics.Debug",
        version = "4.3.0",
        sha256 = "7e403bf528cf6d27a211cadb6d4b1bef4bbd07bc2a6ec74cf6cd4b9e82a3d203",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Diagnostics.Debug.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Diagnostics.Debug.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.diagnostics.diagnosticsource",
        package = "System.Diagnostics.DiagnosticSource",
        version = "6.0.0",
        sha256 = "458f6e5923dd2b67e04b0963d4e1c1181568dd9bc642004937302c4b93863167",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Diagnostics.DiagnosticSource.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime.compilerservices.unsafe//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.diagnostics.tools",
        package = "System.Diagnostics.Tools",
        version = "4.3.0",
        sha256 = "8153afd522ba0297b415084256534e77d72f40a06f331457f4ad093d58bcc346",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Diagnostics.Tools.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Diagnostics.Tools.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.diagnostics.tracing",
        package = "System.Diagnostics.Tracing",
        version = "4.3.0",
        sha256 = "8421136691c719584f62f6f80b47e1e33b3ef33bf818fa22c5a8242d98e96bd4",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.5/System.Diagnostics.Tracing.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Diagnostics.Tracing.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.drawing.common",
        package = "System.Drawing.Common",
        version = "6.0.0",
        sha256 = "ffd11a01b11e3a310b452319688992d4ef059947bc8f85ae154c3554eacfc80a",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Drawing.Common.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.win32.systemevents//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.dynamic.runtime",
        package = "System.Dynamic.Runtime",
        version = "4.3.0",
        sha256 = "93be608ce62298842d2c10f9343cf0c22dd931404f456de399cddebc330c25b5",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Dynamic.Runtime.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.linq//:lib",
        "@main.system.linq.expressions//:lib",
        "@main.system.objectmodel//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.typeextensions//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
        "@main.system.reflection.emit//:lib",
        "@main.system.reflection.emit.ilgeneration//:lib",
        "@main.system.reflection.primitives//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Dynamic.Runtime.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.linq//:lib",
        "@main.system.linq.expressions//:lib",
        "@main.system.objectmodel//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.typeextensions//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
        "@main.system.reflection.emit//:lib",
        "@main.system.reflection.emit.ilgeneration//:lib",
        "@main.system.reflection.primitives//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.globalization",
        package = "System.Globalization",
        version = "4.3.0",
        sha256 = "71a2f4a51985484b1aa1e65e58de414d0b46ac0b5a40fc058bc60e64f646e6b2",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Globalization.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Globalization.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.globalization.calendars",
        package = "System.Globalization.Calendars",
        version = "4.3.0",
        sha256 = "b8d383d043951609d2d9f30abcc884b48f5a3b0d34f8f7f2fc7faab9c01094f7",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Globalization.Calendars.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.globalization//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Globalization.Calendars.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.globalization//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.io",
        package = "System.IO",
        version = "4.3.0",
        sha256 = "aeeca74077a414fe703eb0e257284d891217799fc8f4da632b9a54f873c38916",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.5/System.IO.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.io.compression",
        package = "System.IO.Compression",
        version = "4.3.0",
        sha256 = "7f93eb4254208f95e3d999c7c575bc5e23a2bda06f7ea0daa3d49be805629f20",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.Compression.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.runtime.native.system.io.compression//:lib",
        "@main.system.buffers//:lib",
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.io//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.runtime.native.system//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.Compression.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.runtime.native.system.io.compression//:lib",
        "@main.system.buffers//:lib",
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.io//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.runtime.native.system//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.io.compression.zipfile",
        package = "System.IO.Compression.ZipFile",
        version = "4.3.0",
        sha256 = "59097e2605acf8669131e89a8531546eb8655c81daa737294c55db46f02dbefb",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.Compression.ZipFile.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.buffers//:lib",
        "@main.system.io//:lib",
        "@main.system.io.compression//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.io.filesystem.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.Compression.ZipFile.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.buffers//:lib",
        "@main.system.io//:lib",
        "@main.system.io.compression//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.io.filesystem.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.io.filesystem",
        package = "System.IO.FileSystem",
        version = "4.3.0",
        sha256 = "bcd2189ef95acae563d167d17d82a90eb843a6d961a75a4df026269557764d7c",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.FileSystem.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.io.filesystem.primitives//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.FileSystem.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.io.filesystem.primitives//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.io.filesystem.primitives",
        package = "System.IO.FileSystem.Primitives",
        version = "4.3.0",
        sha256 = "2cc9df83c5706afb3d70c9eaf67347f085ad02d49f934fc5cb8b3846df6bd648",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.FileSystem.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.IO.FileSystem.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.linq",
        package = "System.Linq",
        version = "4.3.0",
        sha256 = "479ba248bde5e9add7ad74922fa8f3faafcf732550cc4001ca2b9764d4aa0ff0",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.6/System.Linq.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Linq.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.linq.expressions",
        package = "System.Linq.Expressions",
        version = "4.3.0",
        sha256 = "fb7a6f85963bae2a7c1c26df7542f38e50bd14f645a58a10c6191cb859b6c24f",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.6/System.Linq.Expressions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.linq//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.emit.ilgeneration//:lib",
        "@main.system.reflection.emit.lightweight//:lib",
        "@main.system.reflection.extensions//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.reflection.typeextensions//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.threading//:lib",
        "@main.system.objectmodel//:lib",
        "@main.system.reflection.emit//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Linq.Expressions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.reflection//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.memory",
        package = "System.Memory",
        version = "4.5.4",
        sha256 = "dec0847f33b8823e4260672d97d657411461c00ada3107ec7bbcb32a845eeb91",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
        "lib/netstandard1.1/System.Memory.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.buffers//:lib",
        "@main.system.runtime.compilerservices.unsafe//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.reflection//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.interopservices//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.net.http",
        package = "System.Net.Http",
        version = "4.3.4",
        sha256 = "14ca14d0aee794f2f1a038eed0d2f6d568e581af46a67028423b05845618b74d",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Net.Http.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.cryptography.x509certificates//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.diagnosticsource//:lib",
        "@main.system.diagnostics.tracing//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.net.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.security.cryptography.encoding//:lib",
        "@main.runtime.native.system//:lib",
        "@main.runtime.native.system.net.http//:lib",
        "@main.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.system.globalization.extensions//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.security.cryptography.algorithms//:lib",
        "@main.system.security.cryptography.openssl//:lib",
        "@main.system.security.cryptography.primitives//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Net.Http.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.cryptography.x509certificates//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.diagnosticsource//:lib",
        "@main.system.diagnostics.tracing//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.net.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.microsoft.win32.primitives//:lib",
        "@main.system.io.compression//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.security.cryptography.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.net.primitives",
        package = "System.Net.Primitives",
        version = "4.3.1",
        sha256 = "a880858d0a3915c49f35279bf1738cc00e5a5203fe3ced227653b91d5a60bac3",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Net.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.handles//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Net.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.handles//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.net.sockets",
        package = "System.Net.Sockets",
        version = "4.3.0",
        sha256 = "8a5eddaf9553fd058383fd1cba1fb812cdaef0b63fffeaaa898f416666314aeb",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Net.Sockets.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.net.primitives//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Net.Sockets.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.net.primitives//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.objectmodel",
        package = "System.ObjectModel",
        version = "4.3.0",
        sha256 = "82d9919163f62b0af79c7b43874c98b5c7b7f33d70ac6cdbe9f8e6e2ff3037a4",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.ObjectModel.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.ObjectModel.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.reflection",
        package = "System.Reflection",
        version = "4.3.0",
        sha256 = "35049946964bbed3d60e5be6308746c5c56ec949f0f76654468d215ec12c8576",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.5/System.Reflection.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Reflection.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.io//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.reflection.emit",
        package = "System.Reflection.Emit",
        version = "4.7.0",
        sha256 = "170fc24910fec1a8c7d4ca9f292dd0fec22b507ec63782be17e0f1ebc50f3488",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.1/System.Reflection.Emit.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.io//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.emit.ilgeneration//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.interopservices//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.reflection.emit.ilgeneration",
        package = "System.Reflection.Emit.ILGeneration",
        version = "4.7.0",
        sha256 = "1949d0786a3f0edbd9550a459c4486abb949723077d3f2a70d8eca7761bf1251",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Reflection.Emit.ILGeneration.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.reflection//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.reflection.extensions",
        package = "System.Reflection.Extensions",
        version = "4.3.0",
        sha256 = "98c38263351e9e3778ad621fabbcc85fd3c5624fdd694c85d00f25d616f27409",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Reflection.Extensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.reflection//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Reflection.Extensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.reflection//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.reflection.primitives",
        package = "System.Reflection.Primitives",
        version = "4.3.0",
        sha256 = "e68830581e2f9504e5de38e4d718e7886da8cdb1488d94cbf6e834bac650b813",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Reflection.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Reflection.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.reflection.typeextensions",
        package = "System.Reflection.TypeExtensions",
        version = "4.7.0",
        sha256 = "184b42197c2d3a79187a3495f937e5f83ab21aae634d4695c8bf5e32ea4c1c13",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Reflection.TypeExtensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.reflection//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.resources.resourcemanager",
        package = "System.Resources.ResourceManager",
        version = "4.3.0",
        sha256 = "89d88e0fddf16dbadbc304a70f898e440f51622fc3fd4e3c79152c9ff5a7586a",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Resources.ResourceManager.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.globalization//:lib",
        "@main.system.reflection//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.0/System.Resources.ResourceManager.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.globalization//:lib",
        "@main.system.reflection//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime",
        package = "System.Runtime",
        version = "4.3.1",
        sha256 = "47d4faf00cd2d4f249eefe80473f6fa3cf2928bd5d5aa2ce00d838a64423900d",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.5/System.Runtime.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.compilerservices.unsafe",
        package = "System.Runtime.CompilerServices.Unsafe",
        version = "6.0.0",
        sha256 = "6c41b53e70e9eee298cff3a02ce5acdd15b04125589be0273f0566026720a762",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.extensions",
        package = "System.Runtime.Extensions",
        version = "4.3.1",
        sha256 = "c6597f005eac175b28435e69ac03c8547487ebd0a22f813d3875431f2ae6f3af",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.5/System.Runtime.Extensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Extensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.handles",
        package = "System.Runtime.Handles",
        version = "4.3.0",
        sha256 = "289e5a5e81a9079e98ebe89ea4191da71fc07da243022b71e2fae42ea47b826b",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Handles.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Handles.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.interopservices",
        package = "System.Runtime.InteropServices",
        version = "4.3.0",
        sha256 = "f2c0c7f965097c247eedee277e97ed8fffa5b2d122662c56501b9e476ce61e02",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netcoreapp1.1/System.Runtime.InteropServices.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.runtime.handles//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.InteropServices.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.reflection//:lib",
        "@main.system.reflection.primitives//:lib",
        "@main.system.runtime.handles//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.interopservices.runtimeinformation",
        package = "System.Runtime.InteropServices.RuntimeInformation",
        version = "4.3.0",
        sha256 = "318a65ebf6720ba8639b359121efa20e895d38c5b599f6f05ec76e0275c82860",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.1/System.Runtime.InteropServices.RuntimeInformation.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.reflection//:lib",
        "@main.system.reflection.extensions//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
        "@main.runtime.native.system//:lib",
        "@main.system.runtime.interopservices//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.1/System.Runtime.InteropServices.RuntimeInformation.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.reflection//:lib",
        "@main.system.reflection.extensions//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
        "@main.runtime.native.system//:lib",
        "@main.system.runtime.interopservices//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.numerics",
        package = "System.Runtime.Numerics",
        version = "4.3.0",
        sha256 = "3f98c70a031b80531888e36fce668a15e3aa7002033eefd4f1b395acd3d82aa7",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.1/System.Runtime.Numerics.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.globalization//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.1/System.Runtime.Numerics.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.globalization//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.serialization.formatters",
        package = "System.Runtime.Serialization.Formatters",
        version = "4.3.0",
        sha256 = "15e89cecc18a546e229a1ee4a4b90f1e6029433623abb4b11e76b3876c199284",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Serialization.Formatters.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime.serialization.primitives//:lib",
        "@main.system.runtime//:lib",
        "@main.system.collections//:lib",
        "@main.system.reflection//:lib",
        "@main.system.resources.resourcemanager//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Serialization.Formatters.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime.serialization.primitives//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.runtime.serialization.primitives",
        package = "System.Runtime.Serialization.Primitives",
        version = "4.3.0",
        sha256 = "ceee66d4cf6eb1e9ddfa2f6c6ee0fa5db8b3768f19e8de4f105f4302d1157b07",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Serialization.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Runtime.Serialization.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.accesscontrol",
        package = "System.Security.AccessControl",
        version = "6.0.0",
        sha256 = "a8ec961016cdaf7123c92f9eb451bcff331bb8f8c0f8ef9d8bbd7b24ff42c728",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Security.AccessControl.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.cryptography.algorithms",
        package = "System.Security.Cryptography.Algorithms",
        version = "4.3.1",
        sha256 = "4253bfa69464fcec836070a2983f3aed102528839a922743d0808d3adeb75cd4",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.6/System.Security.Cryptography.Algorithms.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.cryptography.primitives//:lib",
        "@main.system.io//:lib",
        "@main.system.runtime//:lib",
        "@main.system.security.cryptography.encoding//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.runtime.native.system.security.cryptography.apple//:lib",
        "@main.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.system.collections//:lib",
        "@main.system.runtime.numerics//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Security.Cryptography.Algorithms.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.cryptography.primitives//:lib",
        "@main.system.io//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.cryptography.encoding",
        package = "System.Security.Cryptography.Encoding",
        version = "4.3.0",
        sha256 = "62e81ef3d37a33e35c6e572f5cc7b21d9ea46437f006fdcb3cc0e217c1e126cb",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Security.Cryptography.Encoding.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.system.collections//:lib",
        "@main.system.collections.concurrent//:lib",
        "@main.system.linq//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.security.cryptography.primitives//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Security.Cryptography.Encoding.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.system.collections//:lib",
        "@main.system.collections.concurrent//:lib",
        "@main.system.linq//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.security.cryptography.primitives//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.cryptography.primitives",
        package = "System.Security.Cryptography.Primitives",
        version = "4.3.0",
        sha256 = "7e7162ec1dd29d58f96be05b8179db8e718dbd6ac2114e87a7fc23b235b3df5f",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Security.Cryptography.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Security.Cryptography.Primitives.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.cryptography.protecteddata",
        package = "System.Security.Cryptography.ProtectedData",
        version = "6.0.0",
        sha256 = "5a2f48f4d6d99694035e04bb2a5d3a44817163ff7aef84bb84a898c3911a6d16",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Security.Cryptography.ProtectedData.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.cryptography.x509certificates",
        package = "System.Security.Cryptography.X509Certificates",
        version = "4.3.2",
        sha256 = "b24680b48aa291b06fd79f3a1287128b083e42a06cf6de6329402bfd06fdca2d",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.4/System.Security.Cryptography.X509Certificates.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.cryptography.algorithms//:lib",
        "@main.system.security.cryptography.encoding//:lib",
        "@main.microsoft.netcore.platforms//:lib",
        "@main.system.collections//:lib",
        "@main.system.globalization//:lib",
        "@main.system.globalization.calendars//:lib",
        "@main.system.io//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.handles//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.runtime.numerics//:lib",
        "@main.system.security.cryptography.cng//:lib",
        "@main.system.security.cryptography.primitives//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.runtime.native.system//:lib",
        "@main.runtime.native.system.net.http//:lib",
        "@main.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.io.filesystem.primitives//:lib",
        "@main.system.security.cryptography.csp//:lib",
        "@main.system.security.cryptography.openssl//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Security.Cryptography.X509Certificates.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.cryptography.algorithms//:lib",
        "@main.system.security.cryptography.encoding//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.handles//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.security.permissions",
        package = "System.Security.Permissions",
        version = "6.0.0",
        sha256 = "fcc32fb4558637fbce41f8d774e85eb7582c9cc821ea58790c21e2995b27544b",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Security.Permissions.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.security.accesscontrol//:lib",
        "@main.system.windows.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.text.encoding",
        package = "System.Text.Encoding",
        version = "4.3.0",
        sha256 = "19cb475462d901afebaa404d86c0469ec89674acafe950ee6d8a4692e3a404b8",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Text.Encoding.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Text.Encoding.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.text.encoding.extensions",
        package = "System.Text.Encoding.Extensions",
        version = "4.3.0",
        sha256 = "bee7c75e0f1000ac4796e8cf1c772bb46c00a859ac083e872a37c30221f20187",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Text.Encoding.Extensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Text.Encoding.Extensions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
        "@main.system.text.encoding//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.text.regularexpressions",
        package = "System.Text.RegularExpressions",
        version = "4.3.1",
        sha256 = "0f1b046749e73e8cf20b55b5eb8cab3145f09c07474a14bd127ec8983fc624c3",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netcoreapp1.1/System.Text.RegularExpressions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Text.RegularExpressions.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.threading",
        package = "System.Threading",
        version = "4.3.0",
        sha256 = "643437751e29cd5c266aa060e2169c65a55e9d0ff7c8017fb95ec15d95e38967",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Threading.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Threading.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.threading.tasks",
        package = "System.Threading.Tasks",
        version = "4.3.0",
        sha256 = "679ad77c9d445e9dc6df620a646899ea4a0c8d1bb49fc0b5346af0a5d21e9f8c",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Threading.Tasks.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Threading.Tasks.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.threading.tasks.extensions",
        package = "System.Threading.Tasks.Extensions",
        version = "4.5.4",
        sha256 = "a304a963cc0796c5179f9c6b7d8022bbce3b2fa7c029eb6196f631f7b462d678",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.runtime.compilerservices.unsafe//:lib",
        "@main.system.collections//:lib",
        "@main.system.runtime//:lib",
        "@main.system.threading.tasks//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.threading.timer",
        package = "System.Threading.Timer",
        version = "4.3.0",
        sha256 = "a6686c96685084fdf64d66c1ce82132d9e01a0e441a98936e4e59baeed38a7db",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.2/System.Threading.Timer.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.2/System.Threading.Timer.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
        "@main.system.runtime//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.windows.extensions",
        package = "System.Windows.Extensions",
        version = "6.0.0",
        sha256 = "37eaa0d44e850c9f40f4be74c2656ddf13d057c671946d71797805bb13bec9f3",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Windows.Extensions.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.system.drawing.common//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.xml.readerwriter",
        package = "System.Xml.ReaderWriter",
        version = "4.3.1",
        sha256 = "7e32092b98e9cfdf6038dd933694eada3c37595b680852cef6b52f904fdbc995",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Xml.ReaderWriter.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.io.filesystem.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.text.encoding.extensions//:lib",
        "@main.system.text.regularexpressions//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.system.threading.tasks.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Xml.ReaderWriter.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.io.filesystem//:lib",
        "@main.system.io.filesystem.primitives//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.runtime.interopservices//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.text.encoding.extensions//:lib",
        "@main.system.text.regularexpressions//:lib",
        "@main.system.threading.tasks//:lib",
        "@main.system.threading.tasks.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.xml.xdocument",
        package = "System.Xml.XDocument",
        version = "4.3.0",
        sha256 = "ad6b5d72672e12534e4b309e85f9722b01e40d1a623a1249b3c09e4349750822",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Xml.XDocument.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.tools//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.reflection//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.xml.readerwriter//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Xml.XDocument.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.diagnostics.tools//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.reflection//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.xml.readerwriter//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.system.xml.xmldocument",
        package = "System.Xml.XmlDocument",
        version = "4.3.0",
        sha256 = "91bb95e18eeb54991f329d8a8288bc66f75ab66f4264d9a5281dc666000dbf2e",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Xml.XmlDocument.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.xml.readerwriter//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
        "ref/netstandard1.3/System.Xml.XmlDocument.dll",
    ],
    pdb = [
    ],
    deps = [
        "@main.system.collections//:lib",
        "@main.system.diagnostics.debug//:lib",
        "@main.system.globalization//:lib",
        "@main.system.io//:lib",
        "@main.system.resources.resourcemanager//:lib",
        "@main.system.runtime//:lib",
        "@main.system.runtime.extensions//:lib",
        "@main.system.text.encoding//:lib",
        "@main.system.threading//:lib",
        "@main.system.xml.readerwriter//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "66ef74f32004daf2aefde096bbf12dc5e6346e94aeda383e50f186bd0212abe9",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.debian.9-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.debian.9-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "3dc68ef505ec04a0468799e3a4cbec3dbe7a3ac84bb1baa56f733b409636f58e",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.fedora.23-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "726365cdebd7b9b35ff2f4f8dd7a5adaeb54d544182943377db6b2c61a6705e9",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.fedora.24-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "85e10f089aa59f07caf932ea762d0807b09c3aa3c743eea3a8a24b49f5341ac7",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.fedora.27-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.fedora.27-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "8c986e3cd983a6259842668726fc11748b7d87eb8b490736abaab4773870f0ae",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.fedora.28-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.fedora.28-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "36bf1cdfedaeac6d1e3ededf16b920fe25a8202ca98a95de473f99c2cfdac9a3",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.native.system",
        package = "runtime.native.System",
        version = "4.3.1",
        sha256 = "133c678bcfff928e17e7552b7f3fdcadbd3e76a59fab8e9e66f572b744b4b6ca",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.native.system.io.compression",
        package = "runtime.native.System.IO.Compression",
        version = "4.3.2",
        sha256 = "4407e4e86c7276dc3dc2bf97887026f674c8c98c2fcfb680bb191640864a30de",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.microsoft.netcore.platforms//:lib",
        "@main.microsoft.netcore.targets//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.native.system.security.cryptography.openssl",
        package = "runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "ae9da242c639765de3b7d427c373647b14eacca3414b128f1babadb1fe0a8344",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.debian.9-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.23-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.24-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.27-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.28-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.opensuse.13.2-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.opensuse.42.1-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.opensuse.42.3-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.osx.10.10-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.rhel.7-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.14.04-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.16.04-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.16.10-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.18.04-x64.runtime.native.system.security.cryptography.openssl//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@main.runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.debian.9-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.23-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.24-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.27-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.fedora.28-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.opensuse.13.2-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.opensuse.42.1-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.opensuse.42.3-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.osx.10.10-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.rhel.7-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.14.04-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.16.04-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.16.10-x64.runtime.native.system.security.cryptography.openssl//:lib",
        "@main.runtime.ubuntu.18.04-x64.runtime.native.system.security.cryptography.openssl//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.opensuse.13.2-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "51515175fd409b66f06f6560bb9cd8fa9c7ad228d8676c202a53e9c50a53f103",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.opensuse.42.1-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "6d35285e7510d325083bb3c9a124aa3e0a907b75689644ab65e42d5dbe4e2e35",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.opensuse.42.3-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.opensuse.42.3-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "5462fd9ef60230e1c0825e8aea7197fa58e1441722d0079fedb0192d2034bbe4",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.osx.10.10-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "ef8d07da8d45dc73fe039867870b7509c983061fb80988ba95dd80feb1436d63",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.rhel.7-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "5e4e76d53ea9a429275beb232d95061d620dc1b79df7417a39b6111f8190e7cb",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.ubuntu.14.04-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "1d119746775d13c3b701a648a49b64e16324bde53a551975786959d7700a7b0a",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.ubuntu.16.04-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "657b6f94ad52b647b6d8f9dcf17767a4f97dd1ebf4efc967a62b97c2d417a730",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.ubuntu.16.10-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "49ec992ccbfd185c6fb7d6e599f4c0b9670c35cf9d2f4c613029b6c14b0754ad",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "main.runtime.ubuntu.18.04-x64.runtime.native.system.security.cryptography.openssl",
        package = "runtime.ubuntu.18.04-x64.runtime.native.System.Security.Cryptography.OpenSsl",
        version = "4.3.3",
        sha256 = "ce11b56e6f108f52385ee620d38ee9dde148dfa42b06a5464536fe810a02446f",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_library(
    name = "netstandard1.3",
    target_framework = "netstandard1.3",
    dll = [
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    netstandard1_3 = ":netstandard1.3",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.argu",
        package = "Argu",
        version = "6.1.1",
        sha256 = "b40f67149996be848ea3ca0557ac14b9ab46e7b6b74125b48f100373c03329ed",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.0/Argu.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@othergroup.fsharp.core//:lib",
        "@othergroup.system.configuration.configurationmanager//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.fsharp.core",
        package = "FSharp.Core",
        version = "6.0.3",
        sha256 = "a9701c0a654ccee9fb4691a3672364b7a700d3ee919542ae2595da1f81e34a64",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/netstandard2.1/FSharp.Core.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.fsharp.data",
        package = "FSharp.Data",
        version = "4.2.8",
        sha256 = "e47bf7330a3c6e1d78bcb3adfcefd7a9820e6d215187fd5437a995685f08fbb3",
        build_file = "@examples//paket/deps/custom_build_files:FSharp.Data.BUILD",
    )
    nuget_package(
        name = "othergroup.microsoft.win32.systemevents",
        package = "Microsoft.Win32.SystemEvents",
        version = "6.0.1",
        sha256 = "c24f2857b8c765f4b1297e4f0dc5774bfa529ec685ab89abf1f6a4bc923857d5",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/Microsoft.Win32.SystemEvents.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.system.configuration.configurationmanager",
        package = "System.Configuration.ConfigurationManager",
        version = "6.0.0",
        sha256 = "7cf57aebc09f8bef29356aef1806ab1787dec1d3d5103c25256bc9934cbe0a6b",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Configuration.ConfigurationManager.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@othergroup.system.security.permissions//:lib",
        "@othergroup.system.security.cryptography.protecteddata//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.system.drawing.common",
        package = "System.Drawing.Common",
        version = "6.0.0",
        sha256 = "ffd11a01b11e3a310b452319688992d4ef059947bc8f85ae154c3554eacfc80a",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Drawing.Common.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@othergroup.microsoft.win32.systemevents//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.system.security.accesscontrol",
        package = "System.Security.AccessControl",
        version = "6.0.0",
        sha256 = "a8ec961016cdaf7123c92f9eb451bcff331bb8f8c0f8ef9d8bbd7b24ff42c728",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Security.AccessControl.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.system.security.cryptography.protecteddata",
        package = "System.Security.Cryptography.ProtectedData",
        version = "6.0.0",
        sha256 = "5a2f48f4d6d99694035e04bb2a5d3a44817163ff7aef84bb84a898c3911a6d16",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Security.Cryptography.ProtectedData.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.system.security.permissions",
        package = "System.Security.Permissions",
        version = "6.0.0",
        sha256 = "fcc32fb4558637fbce41f8d774e85eb7582c9cc821ea58790c21e2995b27544b",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Security.Permissions.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@othergroup.system.security.accesscontrol//:lib",
        "@othergroup.system.windows.extensions//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
    nuget_package(
        name = "othergroup.system.windows.extensions",
        package = "System.Windows.Extensions",
        version = "6.0.0",
        sha256 = "37eaa0d44e850c9f40f4be74c2656ddf13d057c671946d71797805bb13bec9f3",
        build_file_content = """
load("@rules_dotnet//dotnet:defs.bzl", "import_library", "import_multiframework_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

selects.config_setting_group(
    name = "win-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:windows"],
)

selects.config_setting_group(
    name = "linux-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:linux"],
)

selects.config_setting_group(
    name = "osx-x64",
    match_all = ["@platforms//cpu:x86_64", "@platforms//os:osx"],
)

selects.config_setting_group(
    name = "osx-arm64",
    match_all = ["@platforms//cpu:aarch64", "@platforms//os:osx"],
)

import_library(
    name = "net6.0",
    target_framework = "net6.0",
    dll = [
        "lib/net6.0/System.Windows.Extensions.dll",
    ],
    ref = [
    ],
    pdb = [
    ],
    deps = [
        "@othergroup.system.drawing.common//:lib",
    ],
    data = select({
        ":linux-x64": [
        ],
        ":osx-arm64": [
        ],
        ":osx-x64": [
        ],
        ":win-x64": [
        ],
    }),
)
import_multiframework_library(
    name = "lib",
    net6_0 = ":net6.0",
    visibility = ["//visibility:public"],
)
""",
    )
