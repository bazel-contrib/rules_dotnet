<?xml version="1.0"?>
<doc>
    <assembly>
        <name>lib</name>
    </assembly>
    <members>
        <member name="T:Lib.ExampleClass">
             <summary>
             Every class and member should have a one sentence
             summary describing its purpose.
             </summary>
             <remarks>
             You can expand on that one sentence summary to
             provide more information for readers. In this case,
             the <c>ExampleClass</c> provides different C#
             elements to show how you would add documentation
            comments for most elements in a typical class.
             <para>
             The remarks can add multiple paragraphs, so you can
             write detailed information for developers that use
             your work. You should add everything needed for
             readers to be successful. This class contains
             examples for the following:
             </para>
             <list type="table">
             <item>
             <term>Summary</term>
             <description>
             This should provide a one sentence summary of the class or member.
             </description>
             </item>
             <item>
             <term>Remarks</term>
             <description>
             This is typically a more detailed description of the class or member
             </description>
             </item>
             <item>
             <term>para</term>
             <description>
             The para tag separates a section into multiple paragraphs
             </description>
             </item>
             <item>
             <term>list</term>
             <description>
             Provides a list of terms or elements
             </description>
             </item>
             <item>
             <term>returns, param</term>
             <description>
             Used to describe parameters and return values
             </description>
             </item>
             <item>
             <term>value</term>
             <description>Used to describe properties</description>
             </item>
             <item>
             <term>exception</term>
             <description>
             Used to describe exceptions that may be thrown
             </description>
             </item>
             <item>
             <term>c, cref, see, seealso</term>
             <description>
             These provide code style and links to other
             documentation elements
             </description>
             </item>
             <item>
             <term>example, code</term>
             <description>
             These are used for code examples
             </description>
             </item>
             </list>
             <para>
             The list above uses the "table" style. You could
             also use the "bullet" or "number" style. Neither
             would typically use the "term" element.
             <br/>
             Note: paragraphs are double spaced. Use the *br*
             tag for single spaced lines.
             </para>
             </remarks>
        </member>
        <member name="P:Lib.ExampleClass.Label">
            <value>
            The <c>Label</c> property represents a label
            for this instance.
            </value>
            <remarks>
            The <see cref="P:Lib.ExampleClass.Label"/> is a <see langword="string"/>
            that you use for a label.
            <para>
            Note that there isn't a way to provide a "cref" to
            each accessor, only to the property itself.
            </para>
            </remarks>
        </member>
        <member name="M:Lib.ExampleClass.Add(System.Int32,System.Int32)">
            <summary>
            Adds two integers and returns the result.
            </summary>
            <returns>
            The sum of two integers.
            </returns>
            <param name="left">
            The left operand of the addition.
            </param>
            <param name="right">
            The right operand of the addition.
            </param>
            <example>
            <code>
            int c = Math.Add(4, 5);
            if (c > 10)
            {
                Console.WriteLine(c);
            }
            </code>
            </example>
            <exception cref="T:System.OverflowException">
            Thrown when one parameter is
            <see cref="F:System.Int32.MaxValue">MaxValue</see> and the other is
            greater than 0.
            Note that here you can also use
            <see href="https://learn.microsoft.com/dotnet/api/system.int32.maxvalue"/>
             to point a web page instead.
            </exception>
            <see cref="T:Lib.ExampleClass"/> for a list of all
            the tags in these examples.
            <seealso cref="P:Lib.ExampleClass.Label"/>
        </member>
        <member name="T:Lib.Person">
            <summary>
            This is an example of a positional record.
            </summary>
            <remarks>
            There isn't a way to add XML comments for properties
            created for positional records, yet. The language
            design team is still considering what tags should
            be supported, and where. Currently, you can use
            the "param" tag to describe the parameters to the
            primary constructor.
            </remarks>
            <param name="FirstName">
            This tag will apply to the primary constructor parameter.
            </param>
            <param name="LastName">
            This tag will apply to the primary constructor parameter.
            </param>
        </member>
        <member name="M:Lib.Person.#ctor(System.String,System.String)">
            <summary>
            This is an example of a positional record.
            </summary>
            <remarks>
            There isn't a way to add XML comments for properties
            created for positional records, yet. The language
            design team is still considering what tags should
            be supported, and where. Currently, you can use
            the "param" tag to describe the parameters to the
            primary constructor.
            </remarks>
            <param name="FirstName">
            This tag will apply to the primary constructor parameter.
            </param>
            <param name="LastName">
            This tag will apply to the primary constructor parameter.
            </param>
        </member>
        <member name="P:Lib.Person.FirstName">
            <summary>
            This tag will apply to the primary constructor parameter.
            </summary>
        </member>
        <member name="P:Lib.Person.LastName">
            <summary>
            This tag will apply to the primary constructor parameter.
            </summary>
        </member>
    </members>
</doc>
