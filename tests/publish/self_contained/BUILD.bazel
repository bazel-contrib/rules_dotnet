load(
    "@rules_dotnet//dotnet:defs.bzl",
    "publish_binary",
)

publish_binary(
    name = "self_contained",
    binary = "//tests/publish/app_to_publish",
    publishing_pack = select({
        "@rules_dotnet//dotnet:rid_linux-x64": "@rules_dotnet_test_deps//microsoft.netcore.app.runtime.linux-x64",
        "@rules_dotnet//dotnet:rid_osx-x64": "@rules_dotnet_test_deps//microsoft.netcore.app.runtime.osx-x64",
        "@rules_dotnet//dotnet:rid_win-x64": "@rules_dotnet_test_deps//microsoft.netcore.app.runtime.win-x64",
    }),
    self_contained = True,
    target_framework = "net6.0",
)

# We need an itermediary target since sh_test only accepts
# a single .sh file in srcs. We are also using srcs instead
# of data because we want to test the output from the publish
# without interference from Bazel's runfile handling
sh_library(
    name = "test_lib",
    srcs = [
        ":self_contained"
    ]
)

sh_test(
    name = "self_contained_test",
    srcs = [
        "test.sh",
    ],
    deps = [":test_lib"],
)
